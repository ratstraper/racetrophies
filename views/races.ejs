<!DOCTYPE html>
<html lang="en">
<head>
<%- include('../partials/head') %>
<style>
  .card {
    position: relative;
    max-width: 281px;
    height: 492px;
    background: #EAF4FF;
    margin: 11px;
    padding-top: 16px;
    padding-bottom: 22px;
    display: flex;
    justify-content: center;
    align-content: space-between;
    align-items: stretch;
    flex-wrap: wrap;
    cursor: pointer;
    /* user-select:  */
    outline: none;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    @media (max-width: 900px) {
      margin-bottom: 40px;
    }
    .imgBox {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 250px;
      height: 184px;
      img {
        max-width: 250px;
        /* margin-bottom: 28px; */
      }
    }
    .descBox {
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      flex-wrap: wrap;
      margin: 0 22px;
      img {
        width: 32px;
        height: 32px;
      }
      h5 {
        font-family: 'Montserrat';
        font-style: normal;
        font-weight: 400;
        font-size: 32px;
        line-height: 39px;
        text-align: center;
        color: #333333;
        margin: 0;
        margin-bottom: 24px;
      }
      p {
        font-family: 'Source Sans Pro';
        font-style: normal;
        font-weight: 300;
        font-size: 20px;
        line-height: 25px;
        letter-spacing: 0.02em;
        color: #333333;
        margin-left: 30px;
      }
      .distance, .type, .trophy {
        width: 100%;
        height: 32px;
        display: flex;
        justify-content: flex-start;
        align-items: center;
        margin-bottom: 5px;
      }
    }
    .buttonBox {
      width: 100%;
      height: 58px;
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 0 16px;
      text-decoration: none;
    }
    .BunnerContainer {
      position: absolute;
      width: 91px;
      height: 100%;
      left: 0;
      display: flex;
      justify-content: flex-start;
      align-items: flex-start;
      align-content: start;
      flex-wrap: wrap;
      .BannerFlag {
        width: 91px;
        height: 58px;
        position: relative;
        margin-bottom: 8px;
        svg {
          position: absolute;
          width: 100%;
          height: 100%;
          z-index: 10;
          left: -10px;
          top: 0;
        }
        .BunnerContainerContentBox {
          position: absolute;
          width: 100%;
          height: 100%;
          z-index: 11;
          display: flex;
          justify-content: flex-start;
          align-items: center;
          flex-wrap: wrap;
          font-family: 'Source Sans Pro';
          font-style: italic;
          font-weight: 400;
          font-size: 14px;
          line-height: 16px;
          color: #FFFFFF;
          background-size: cover;
          p {
            margin: 0;
          }
        }
      }
    }
  }
  .BunnerContainerContentBox {
    display: flex;
    justify-content: flex-start;
    p {
      width: 100%;
      text-align: left;
    }
  }
  .switchBox {
    /* display: flexbox; */
    bottom: 40px;
    right: 30px;
    position: fixed;
    color: #bcd;
    background: #4B4B4B;
    padding: 4px;
    border: 2px solid #bcd;
    border-radius: 2px;
    span {
      font-family: 'Montserrat';
      font-weight: 400;
      font-size: 1.0em;
      vertical-align: text-bottom;
    }
  }
</style>
</head>
<body>
  <div class="races">
    <%- include('../partials/header', {theme: 'black'}) %>
    <div class="cardsContainer">
      <div class="cardsBox" id="racesBox"></div>
    </div>
    <%- include('../partials/footer') %>
    <script src="/js/ethers-integration.js"></script>
    <div class="switchBox">
      <span>Show All</span>
      <label class="el-switch el-switch-green" style="font-size: 75%;">
        <input type="checkbox" name="switch" id="header_switch" checked>
        <span class="el-switch-style"></span>
      </label>
    </div>
  </div>
  <script>
    const makeImage = (src) => {
      var image = document.createElement('img')
      image.src = src
      return image
    }
    const makeParagraph = (str) => {
      var p = document.createElement('p')
      p.innerHTML = str
      return p
    }

    // var account
    var cards
    function showCards() {
      document.getElementById('racesBox').innerHTML = ''
      cards.forEach(it => {
                var card = document.createElement('div')
                card.classList.add('card')
                  //image race
                  var div = document.createElement('div')
                  div.classList.add('imgBox')
                  if(it.active == 0 && it.finish == undefined) {
                    // div.style.filter = 'grayscale(100%)'
                    div.style.filter = 'sepia(100%)'
                    // div.style.filter = 'blur(3px)'
                    card.id = "unactive"
                  }
                  div.appendChild(makeImage(it.image_race))
                card.appendChild(div)
                  //info race
                  var desc = document.createElement('div')
                  desc.classList.add('descBox')
                    var title = document.createElement('h5')
                    title.innerHTML = it.title
                  desc.appendChild(title)
                    var distance = document.createElement('div')
                    distance.classList.add('distance')
                    distance.appendChild(makeImage('/design/race-icon.svg'))
                    distance.appendChild(makeParagraph(it.distance))
                  desc.appendChild(distance)
                    var type = document.createElement('div')
                    type.classList.add('type')
                    type.appendChild(makeImage('/design/run-icon.svg'))
                    type.appendChild(makeParagraph(it.type))
                  desc.appendChild(type)
                    var trophy = document.createElement('div')
                    trophy.classList.add('trophy')
                    trophy.appendChild(makeImage('/design/medal-icon.svg'))
                    trophy.appendChild(makeParagraph(it.trophy))
                  desc.appendChild(trophy)
                card.appendChild(desc)
                  // button
                  var btnbox = document.createElement('div')
                  btnbox.classList.add('buttonBox')
                    var link = document.createElement('a');
                    link.classList.add('buttonBox')
                    link.href = `/race/${it.raceId}`
                      var btn = document.createElement('button')
                      btn.textContent = (it.finish != undefined || it.active == 0) ? 'VIEW RACE' : 'Join Race'
                      btn.classList.add('buttonBlue')
                      btn.style.width = '100%'
                      btn.style.backgroundColor = it.color
                      btn.style.color = it.text_color
                      // btn.style. = it.dark_color
                      btn.addEventListener('mouseover', () => {
                        btn.style.backgroundColor = it.dark_color
                      })
                      btn.addEventListener('mouseout', () => {
                        btn.style.backgroundColor = it.color
                      });
                    link.appendChild(btn);
                  btnbox.appendChild(link)
                card.appendChild(btnbox)
                  //banner result
                  var secondFlagmarginTop = '0px'
                  if(it.finish !== undefined) {
                    var banner = document.createElement('div')
                    banner.classList.add('BunnerContainer')
                      var flag = document.createElement('div')
                      flag.classList.add('BannerFlag')
                      flag.innerHTML = `<svg width="91" height="59" viewBox="0 0 91 59" fill="none" xmlns="http://www.w3.org/2000/svg">` +
                                `<path d="M9.5 0L-9.53674e-07 3.23134V31.4104V61.5L9.5 57.5V0Z" fill=${it.finish.dark_color}></path>` +
                                `<path d="M0 3.5H91L74.1712 32.5L91 61.5H0V3.5Z" fill=${it.finish.color}></path>` +
                              `</svg>`
                        var ccb = document.createElement('div')
                        ccb.classList.add('BunnerContainerContentBox')   
                        ccb.style.color = '#ffffff'   
                      if(it.finish.data === 0  && it.finish.track_time === 0) {
                        ccb.appendChild(makeParagraph('Registered'))  
                        ccb.appendChild(makeParagraph(`# ${it.finish.runner_number}`)) 
                      } else {
                        ccb.appendChild(makeParagraph(it.finish.date))
                        ccb.appendChild(makeParagraph(it.finish.track_time))
                      }
                      flag.appendChild(ccb)
                      banner.appendChild(flag)
                    card.appendChild(banner)  
                    secondFlagmarginTop = '64px'
                  } 
                  //banner
                  if(it.banner != undefined) {
                    var banner = document.createElement('div')
                    banner.classList.add('BunnerContainer')
                      var flag = document.createElement('div')
                      flag.style.marginTop = secondFlagmarginTop
                      flag.classList.add('BannerFlag')
                      flag.innerHTML = `<svg width="91" height="59" viewBox="0 0 91 59" fill="none" xmlns="http://www.w3.org/2000/svg">` +
                                `<path d="M9.5 0L-9.53674e-07 3.23134V31.4104V61.5L9.5 57.5V0Z" fill=${it.banner.dark_color}></path>` +
                                `<path d="M0 3.5H91L74.1712 32.5L91 61.5H0V3.5Z" fill=${it.banner.color}></path>` +
                              `</svg>`
                        var ccb = document.createElement('div')
                        ccb.classList.add('BunnerContainerContentBox')   
                        ccb.style.color = '#ffffff'   
                        ccb.appendChild(makeParagraph(it.banner.title))  
                        ccb.appendChild(makeParagraph(it.banner.desc))
                      flag.appendChild(ccb)
                      banner.appendChild(flag)
                      card.appendChild(banner)
                    }
                document.getElementById('racesBox').appendChild(card)
              })
    }

    
    async function loadCards() {
      Swal.fire({
        title: "",
        text: "Please wait.",
        imageUrl: "/design/run1.gif",
        showConfirmButton: false
      });
      
      account = await getAddress()
      console.log("acc:", account)
      fetch(`/api/getActiveRaces?org=0&wallet=${account}`)
        .then(response => response.json())
        .then(data => {
          swal.close()
          console.log("/api/getActiveRaces:", data)
          cards = data
          showCards()
        })
        .catch(error => {
          swal.close()
          console.error(error);
        })
    }

    document.addEventListener('DOMContentLoaded', function() {
      loadCards()
    })

    window.onload = function() {
      var input = document.getElementById('header_switch')
      if (input) {   
        input.addEventListener('change', function() {
          document.querySelectorAll('[id=unactive]').forEach(element=> {
            element.style = this.checked ? "display:flex;" : "display:none;"
          })
        })
      }
    }

    async function reload() {
      // account = await getAddress()
      loadCards()
    }
  </script>
</body>
</html>